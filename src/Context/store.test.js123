// import { act } from 'react-dom/test-utils'
import React from 'react'
// import { MIN_PASSWORD, MAX_PASSWORD } from './constant'
import {open, close, nextStep, initStep, resultPass, passState} from './store'

beforeAll(() => {
  const setStateMock = jest.fn()

  jest.doMock('react', () => ({
  useState: initial => [initial, setStateMock]
  }));
});

  const initial = {
  wizard: false, // Modal status
  active: 1, // Step number
  result: '' // Result submit
}


it('validation functions', () => {

console.log(initial)
  // const useStateMock = (useState) => [useState, setStateMock]
  // jest.spyOn(React, 'useState').mockImplementation(useStateMock)

  // store.open()
  // close()
  // nextStep()
  // initStep()
  // resultPass(true)  
});

// test('Can increment from 1 to 2', () => {


//   open();
// 
//   expect(setStateMock).toHaveBeenCalledWith(2);
// const userAvatar = getByTestId('avatar')
// fireEvent.press(userAvatar)
// expect(navigateToProfile).toHaveBeenCalledWith({ userId })
// });